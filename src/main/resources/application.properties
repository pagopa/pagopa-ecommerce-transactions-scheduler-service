application.name=@project.artifactId@
build.version=@project.version@
#Mongo configurations
spring.data.mongodb.uri=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/?ssl=${MONGO_SSL_ENABLED}&readPreference=secondaryPreferred&minPoolSize=${MONGO_MIN_POOL_SIZE}&maxPoolSize=${MONGO_MAX_POOL_SIZE}&maxIdleTimeMS=${MONGO_MAX_IDLE_TIMEOUT_MS}&connectTimeoutMS=${MONGO_CONNECTION_TIMEOUT_MS}&socketTimeoutMS=${MONGO_SOCKET_TIMEOUT_MS}&serverSelectionTimeoutMS=${MONGO_SERVER_SELECTION_TIMEOUT_MS}&waitQueueTimeoutMS=${MONGO_WAITING_QUEUE_MS}&heartbeatFrequencyMS=${MONGO_HEARTBEAT_FREQUENCY_MS}${MONGO_REPLICA_SET_OPTION:}
spring.data.mongodb.database=${ECOMMERCE_DATABASE_NAME}
#Azure storage configurations
azurestorage.transient.connectionstring=${QUEUE_TRANSIENT_CONNECTION_STRING}
azurestorage.queues.transactionexpired.name=${TRANSACTION_EXPIRED_EVENTS_QUEUE_NAME}
azurestorage.queues.transientQueues.ttlSeconds=${TRANSIENT_QUEUES_TTL_SECONDS:604800}
#Applicative configurations
pendingTransactions.batch.scheduledChron=${PENDING_TRANSACTIONS_SCHEDULE_CRON}
pendingTransactions.batch.transactionsAnalyzer.executionRateMultiplier=${PENDING_TRANSACTIONS_WINDOWS_BATCH_EXECUTION_RATE_MULTIPLIER}
pendingTransactions.batch.transactionsAnalyzer.parallelEventsToProcess=${PENDING_TRANSACTIONS_PARALLEL_EVENTS_TO_PROCESS}
pendingTransactions.batch.maxDurationSeconds=${PENDING_TRANSACTIONS_MAX_DURATION_SECONDS:-1}
pendingTransactions.batch.maxTransactionsPerPage=${PENDING_TRANSACTIONS_MAX_TRANSACTIONS_PER_PAGE}
pendingTransactions.batch.sendPaymentResultTimeout=${PENDING_TRANSACTIONS_SEND_PAYMENT_RESULT_TIMEOUT_SECONDS}
pendingTransactions.batch.pageAnalysisDelaySeconds=${PENDING_TRANSACTIONS_PAGE_ANALYSIS_DELAY_SECONDS}
#Dead letter queue event reader configurations
deadLetterListener.transaction.fixedDelay=${DEAD_LETTER_LISTENER_TRANSACTION_FIXED_DELAY_MILLIS}
deadLetterListener.transaction.maxMessagePerPoll=${DEAD_LETTER_LISTENER_TRANSACTION_MAX_MESSAGE_PER_POLL}
deadLetterListener.transaction.queueName=${DEAD_LETTER_LISTENER_TRANSACTION_QUEUE_NAME}
deadLetterListener.notification.fixedDelay=${DEAD_LETTER_LISTENER_NOTIFICATION_FIXED_DELAY_MILLIS}
deadLetterListener.notification.maxMessagePerPoll=${DEAD_LETTER_LISTENER_NOTIFICATION_MAX_MESSAGE_PER_POLL}
deadLetterListener.notification.queueName=${DEAD_LETTER_LISTENER_NOTIFICATION_QUEUE_NAME}
#Spring cloud azure storage queue account configuration
spring.cloud.azure.storage.queue.account-key=${ECOMMERCE_STORAGE_DEAD_LETTER_QUEUE_KEY}
spring.cloud.azure.storage.queue.account-name=${ECOMMERCE_STORAGE_DEAD_LETTER_QUEUE_ACCOUNT_NAME}
spring.cloud.azure.storage.queue.endpoint=${ECOMMERCE_STORAGE_DEAD_LETTER_QUEUE_ENDPOINT}
#NPG key config
npg.uri=${NPG_URI}
npg.readTimeout=${NPG_READ_TIMEOUT}
npg.connectionTimeout=${NPG_CONNECTION_TIMEOUT}
npg.client.apiKey=${NPG_API_KEY}
npg.authorization.cards.keys=${NPG_CARDS_PSP_KEYS}
npg.authorization.cards.pspList=${NPG_CARDS_PSP_LIST}
npg.authorization.paypal.keys=${NPG_PAYPAL_PSP_KEYS}
npg.authorization.paypal.pspList=${NPG_PAYPAL_PSP_LIST}
npg.authorization.bancomatpay.keys=${NPG_BANCOMATPAY_PSP_KEYS}
npg.authorization.bancomatpay.pspList=${NPG_BANCOMATPAY_PSP_LIST}
npg.authorization.mybank.keys=${NPG_MYBANK_PSP_KEYS}
npg.authorization.mybank.pspList=${NPG_MYBANK_PSP_LIST}
npg.authorization.satispay.keys=${NPG_SATISPAY_PSP_KEYS}
npg.authorization.satispay.pspList=${NPG_SATISPAY_PSP_LIST}
npg.authorization.applepay.keys=${NPG_APPLEPAY_PSP_KEYS}
npg.authorization.applepay.pspList=${NPG_APPLEPAY_PSP_LIST}
#Redis
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.port=${REDIS_PORT}
spring.redis.ssl=${REDIS_SSL_ENABLED}
# Redis stream configuration
redisStream.eventController.streamKey=${REDIS_STREAM_EVENT_CONTROLLER_STREAM_KEY}
redisStream.eventController.consumerNamePrefix=${REDIS_STREAM_EVENT_CONTROLLER_CONSUMER_NAME_PREFIX}
# event receivers controller configurations
eventController.status.pollingChron=${EVENT_CONTROLLER_STATUS_POLLING_CHRON}
eventController.deploymentVersion=${DEPLOYMENT_VERSION:PROD}
spring.task.scheduling.pool.size=5