#Mongo configurations
spring.data.mongodb.uri=mongodb://admin:password@localhost:27017/?ssl=false
spring.data.mongodb.ecommerce.database=ecommerce
spring.data.mongodb.ecommerce_history.database=ecommerce-history
#Azure storage configurations
azurestorage.transient.connectionstring=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://127.0.0.1:10001/devstoreaccount1
azurestorage.queues.transactionexpired.name=transactioncexpiredevents
#Applicative configurations
pendingTransactions.batch.scheduledChron=*/10 * * * * *
pendingTransactions.batch.transactionsAnalyzer.executionRateMultiplier=2
pendingTransactions.batch.transactionsAnalyzer.parallelEventsToProcess=1
pendingTransactions.batch.sendPaymentResultTimeout=3900
pendingTransactions.batch.maxTransactionsPerPage=1
pendingTransactions.batch.pageAnalysisDelaySeconds=1
#Dead letter queue event reader configurations
deadLetterListener.transaction.fixedDelay=1000
deadLetterListener.transaction.maxMessagePerPoll=1
deadLetterListener.transaction.queueName=pagopa-ecommerce-transactions-dead-letter-queue
deadLetterListener.notification.fixedDelay=1000
deadLetterListener.notification.maxMessagePerPoll=1
deadLetterListener.notification.queueName=pagopa-ecommerce-notifications-service-errors-queue
#Spring cloud azure storage queue account configuration
spring.cloud.azure.storage.queue.account-key=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==
spring.cloud.azure.storage.queue.account-name=devstoreaccount1
spring.cloud.azure.storage.queue.endpoint=http://127.0.0.1:10001/devstoreaccount1
#NPG key config
npg.uri=https://stg-ta.nexigroup.com/api/phoenix-0.0/psp/api/v1
npg.readTimeout=1000
npg.connectionTimeout=1000
npg.client.apiKey=npg-api-key
npg.authorization.cards.keys={"psp1-cards":"key1","psp2-cards":"key2"}
npg.authorization.cards.pspList=psp1-cards,psp2-cards
npg.authorization.paypal.keys={"psp1-paypal":"paypal-key1","psp2-paypal":"paypal-key2"}
npg.authorization.paypal.pspList=psp1-paypal,psp2-paypal
npg.authorization.bancomatpay.keys={"psp1-bancomatpay":"bancomatpay-key1","psp2-bancomatpay":"bancomatpay-key2"}
npg.authorization.bancomatpay.pspList=psp1-bancomatpay,psp2-bancomatpay
npg.authorization.mybank.keys={"psp1-mybank":"mybank-key1","psp2-mybank":"mybank-key2"}
npg.authorization.mybank.pspList=psp1-mybank,psp2-mybank
npg.authorization.satispay.keys={"psp1-satispay":"satispay-key1","psp2-satispay":"satispay-key2"}
npg.authorization.satispay.pspList=psp1-satispay,psp2-satispay
npg.authorization.applepay.keys={"psp1-applepay":"applepay-key1","psp2-applepay":"applepay-key2"}
npg.authorization.applepay.pspList=psp1-applepay,psp2-applepay
npg.authorization.googlepay.keys={"psp1-googlepay":"googlepay-key1","psp2-googlepay":"googlepay-key2"}
npg.authorization.googlepay.pspList=psp1-googlepay,psp2-googlepay
#Redis
spring.data.redis.host=redis
spring.data.redis.password=redis
spring.data.redis.port=9999
spring.data.redis.ssl.enabled=false
redisStream.eventController.streamKey=streamKey
redisStream.eventController.consumerNamePrefix=name-prefix
# event receivers controller configurations
eventController.status.pollingChron=-
eventController.deploymentVersion=PROD
# Transactions view update configuration
transactionsview.update.enabled=true