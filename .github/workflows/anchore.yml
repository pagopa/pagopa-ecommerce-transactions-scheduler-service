# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, builds an image, performs a container image
# vulnerability scan with Anchore's Grype tool, and integrates the results with GitHub Advanced Security
# code scanning feature.  For more information on the Anchore scan action usage
# and parameters, see https://github.com/anchore/scan-action. For more
# information on Anchore's container image scanning tool Grype, see
# https://github.com/anchore/grype
name: Anchore Container Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '00 07 * * *'

permissions:
  contents: read
  packages: read

env:
  DOCKERFILE: Dockerfile
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Anchore-Build-Scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build the Docker image
        run: docker build . --file ${{ env.DOCKERFILE }} --tag localbuild/testimage:latest --secret id=GITHUB_TOKEN,env=GITHUB_TOKEN

      - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
        uses: anchore/scan-action@v6
        id: scan
        with:
          image: "localbuild/testimage:latest"
          fail-build: true
          severity-cutoff: "high"
          output-format: "sarif"

      # Print SARIF file for debugging
      - name: Print SARIF results summary
        if: always()
        run: |
          echo "=== SARIF Summary ==="
          if [ -f "results.sarif" ]; then
            # Count the number of results
            echo "Total findings: $(grep -o '"results":' results.sarif | wc -l)"

            # Extract and print high severity findings
            echo "=== High Severity Findings ==="
            jq '.runs[].results[] | select(.properties.security_severity | tonumber >= 8.0) | {ruleId: .ruleId, message: .message.text, severity: .properties.security_severity, package: .locations,[object Object],physicalLocation.artifactLocation.uri}' results.sarif

            # Print summary of findings by severity
            echo "=== Severity Distribution ==="
            jq -c '.runs[].results[] | .properties.security_severity | tonumber' results.sarif | sort | uniq -c
          else
            echo "SARIF file not found!"
          fi

      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
